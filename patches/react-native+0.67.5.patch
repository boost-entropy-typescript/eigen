diff --git a/node_modules/react-native/Libraries/Core/Devtools/parseErrorStack.js b/node_modules/react-native/Libraries/Core/Devtools/parseErrorStack.js
index 185ddcb..113671f 100644
--- a/node_modules/react-native/Libraries/Core/Devtools/parseErrorStack.js
+++ b/node_modules/react-native/Libraries/Core/Devtools/parseErrorStack.js
@@ -13,6 +13,7 @@
 import type {StackFrame} from '../NativeExceptionsManager';
 import type {HermesParsedStack} from './parseHermesStack';
 
+const stacktraceParser = require('stacktrace-parser');
 const parseHermesStack = require('./parseHermesStack');
 
 function convertHermesStack(stack: HermesParsedStack): Array<StackFrame> {
@@ -43,7 +44,6 @@ function parseErrorStack(errorStack?: string): Array<StackFrame> {
     return [];
   }
 
-  const stacktraceParser = require('stacktrace-parser');
   const parsedStack = Array.isArray(errorStack)
     ? errorStack
     : global.HermesInternal
diff --git a/node_modules/react-native/Libraries/LayoutAnimation/LayoutAnimation.js b/node_modules/react-native/Libraries/LayoutAnimation/LayoutAnimation.js
index efb12af..09b5978 100644
--- a/node_modules/react-native/Libraries/LayoutAnimation/LayoutAnimation.js
+++ b/node_modules/react-native/Libraries/LayoutAnimation/LayoutAnimation.js
@@ -64,9 +64,9 @@ function configureNext(
 
   // In Fabric, LayoutAnimations are unconditionally enabled for Android, and
   // conditionally enabled on iOS (pending fully shipping; this is a temporary state).
-  const FabricUIManager: FabricUIManagerSpec = global?.nativeFabricUIManager;
-  if (FabricUIManager?.configureNextLayoutAnimation) {
-    global?.nativeFabricUIManager?.configureNextLayoutAnimation(
+  const FabricUIManager: FabricUIManagerSpec = global && global.nativeFabricUIManager;
+  if (FabricUIManager && FabricUIManager.configureNextLayoutAnimation) {
+    global.nativeFabricUIManager.configureNextLayoutAnimation(
       config,
       onAnimationComplete,
       onAnimationDidFail ??
@@ -78,7 +78,7 @@ function configureNext(
   // This will only run if Fabric is *not* installed.
   // If you have Fabric + non-Fabric running in the same VM, non-Fabric LayoutAnimations
   // will not work.
-  if (UIManager?.configureNextLayoutAnimation) {
+  if (UIManager && UIManager.configureNextLayoutAnimation) {
     UIManager.configureNextLayoutAnimation(
       config,
       onAnimationComplete ?? function() {},
diff --git a/node_modules/react-native/React/Base/RCTTouchHandler.m b/node_modules/react-native/React/Base/RCTTouchHandler.m
index 668519f..b7dac59 100644
--- a/node_modules/react-native/React/Base/RCTTouchHandler.m
+++ b/node_modules/react-native/React/Base/RCTTouchHandler.m
@@ -13,6 +13,7 @@
 #import "RCTBridge.h"
 #import "RCTEventDispatcherProtocol.h"
 #import "RCTLog.h"
+#import "RCTRootContentView.h"
 #import "RCTSurfaceView.h"
 #import "RCTTouchEvent.h"
 #import "RCTUIManager.h"
@@ -104,6 +105,16 @@ RCT_NOT_IMPLEMENTED(-(instancetype)initWithTarget : (id)target action : (SEL)act
       continue;
     }
 
+    UIView *touchRootView = touch.view;
+    while (touchRootView && ![touchRootView isKindOfClass:RCTRootContentView.class]) {
+      touchRootView = touchRootView.superview;
+    }
+
+    if ([touchRootView isKindOfClass:RCTRootContentView.class] && touchRootView != self.view) {
+      // handled by a different UITouchHandler
+      continue;
+    }
+
     // Get new, unique touch identifier for the react touch
     const NSUInteger RCTMaxTouches = 11; // This is the maximum supported by iDevices
     NSInteger touchID = ([_reactTouches.lastObject[@"identifier"] integerValue] + 1) % RCTMaxTouches;
diff --git a/node_modules/react-native/jest/assetFileTransformer.js b/node_modules/react-native/jest/assetFileTransformer.js
index 03b018f..5da3759 100644
--- a/node_modules/react-native/jest/assetFileTransformer.js
+++ b/node_modules/react-native/jest/assetFileTransformer.js
@@ -20,12 +20,13 @@ module.exports = {
   // the correct images are loaded for components. Essentially
   // require('img1.png') becomes `Object { "testUri": 'path/to/img1.png' }` in
   // the Jest snapshot.
-  process: (_, filename) =>
-    `module.exports = {
+  process: (_, filename) => ({
+    code: `module.exports = {
       testUri:
         ${JSON.stringify(
           path.relative(__dirname, filename).replace(/\\/g, '/'),
         )}
     };`,
+  }),
   getCacheKey: createCacheKeyFunction([__filename]),
 };
diff --git a/node_modules/react-native/scripts/find-node.sh b/node_modules/react-native/scripts/find-node.sh
index 5d6d2c4..808acb1 100755
--- a/node_modules/react-native/scripts/find-node.sh
+++ b/node_modules/react-native/scripts/find-node.sh
@@ -50,7 +50,7 @@ fi
 if [[ -f "$HOME/.asdf/asdf.sh" ]]; then
   # shellcheck source=/dev/null
   . "$HOME/.asdf/asdf.sh"
-elif [[ -x "$(command -v brew)" && -f "$(brew --prefix asdf)/asdf.sh" ]]; then
+elif [[ -x "$(command -v brew)" && -f "$(brew --prefix asdf)/libexec/asdf.sh" ]]; then
   # shellcheck source=/dev/null
-  . "$(brew --prefix asdf)/asdf.sh"
+  . "$(brew --prefix asdf)/libexec/asdf.sh"
 fi
